generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  buyer
  admin
  seller
}

enum OrderStatus {
  pending
  processing
  shipped
  delivered
  cancelled
}

model user {
  id            Int             @id @default(autoincrement())
  fullName      String
  email         String          @unique
  password      String 
  phone         String          @unique
  address       String    
  role          Role            @default(buyer) 
  refreshtoken  refreshtoken[] 
  seller        seller[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model refreshtoken {
  id         Int       @id @default(autoincrement())
  token      String  
  userId     Int
  user       users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userAgent  String?
  ip         String?
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
}

model seller {
  id             String   @id @default(uuid())
  sellerId       Int      @unique
  user           users    @relation(fields: [sellerId], references: [id])
  pickupAddress  String
  businessName   String
  gstNumber      String?
  bankInfo       String?
  products       product[]
}

model category {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String?  
  subcatories  sub-category[]  
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model sub-category {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String?
  categoryId   Int
  category     category  @relation(fields: [category], references: [id], onDelete: Cascade)
  products     product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model product {
  id             Int           @id @default(autoincrement())
  name           String  
  price          Float
  description    String
  subCategoryId  Int
  subCategory    sub-category  @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  sellerId       String
  seller         seller        @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  createdAt      DateTime      @default(now())
}
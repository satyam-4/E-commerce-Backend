generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  buyer
  admin
  seller
}

enum OrderStatus {
  pending
  processing
  shipped
  delivered
  cancelled
}

model users {
  id            Int             @id @default(autoincrement())
  fullName      String
  email         String          @unique
  password      String 
  phone         String          @unique
  address       String    
  role          Role            @default(buyer) 
  refreshtoken  refreshtoken[] 
  seller        seller[]
  cart          cart?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model refreshtoken {
  id         Int       @id @default(autoincrement())
  token      String  
  userId     Int
  user       users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userAgent  String?
  ip         String?
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
}

model seller {
  id             String   @id @default(uuid())
  sellerId       Int      @unique
  user           users    @relation(fields: [sellerId], references: [id])
  pickupAddress  String
  businessName   String
  gstNumber      String?
  bankInfo       String?
  product        product[]
}

model product {
  id           Int       @id @default(autoincrement())
  name         String  
  price        Float
  description  String
  sellerId     String
  seller       seller    @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  cartitem     cartitem[]
  createdAt    DateTime  @default(now())
}

model cart {
  id         Int       @id @default(autoincrement())
  userId     Int       @unique
  user       users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  items      cartitem[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model cartitem {
  id         Int       @id @default(autoincrement())
  cartId     Int       
  cart       cart      @relation(fields: [cartId], references: [id], onDelete: Cascade)  

  productId  Int
  product    product   @relation(fields: [productId], references: [id], onDelete: Cascade)

  quantity   Int       @default(1)

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([cartId, productId])
}